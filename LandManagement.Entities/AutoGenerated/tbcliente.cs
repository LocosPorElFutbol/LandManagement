//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace LandManagement.Entities
{
    public partial class tbcliente
    {
        #region Primitive Properties
    
        public virtual int cli_id
        {
            get;
            set;
        }
    
        public virtual Nullable<int> cli_id_padre
        {
            get { return _cli_id_padre; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_cli_id_padre != value)
                    {
                        if (tbcliente2 != null && tbcliente2.cli_id != value)
                        {
                            tbcliente2 = null;
                        }
                        _cli_id_padre = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _cli_id_padre;
    
        public virtual int tif_id
        {
            get { return _tif_id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_tif_id != value)
                    {
                        if (tbtipofamiliar != null && tbtipofamiliar.tif_id != value)
                        {
                            tbtipofamiliar = null;
                        }
                        _tif_id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _tif_id;
    
        public virtual System.DateTime cli_fecha
        {
            get;
            set;
        }
    
        public virtual string cli_nombre
        {
            get;
            set;
        }
    
        public virtual string cli_apellido
        {
            get;
            set;
        }
    
        public virtual string cli_telefono_celular
        {
            get;
            set;
        }
    
        public virtual string cli_telefono_particular
        {
            get;
            set;
        }
    
        public virtual string cli_telefono_laboral
        {
            get;
            set;
        }
    
        public virtual string cli_email
        {
            get;
            set;
        }
    
        public virtual string cli_sexo
        {
            get;
            set;
        }
    
        public virtual System.DateTime cli_fecha_nacimiento
        {
            get;
            set;
        }
    
        public virtual string cli_nacionalidad
        {
            get;
            set;
        }
    
        public virtual string cli_estado_civil
        {
            get;
            set;
        }
    
        public virtual string cli_tipo_documento
        {
            get;
            set;
        }
    
        public virtual string cli_numero_documento
        {
            get;
            set;
        }
    
        public virtual string cli_cuit_cuil
        {
            get;
            set;
        }
    
        public virtual string cli_como_llego
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> cli_actualizado
        {
            get;
            set;
        }
    
        public virtual string cli_titulo
        {
            get;
            set;
        }
    
        public virtual string cli_nombre_pila
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> cli_imprime_carta
        {
            get;
            set;
        }
    
        public virtual string cli_estado_actual
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<tbcliente> tbcliente1
        {
            get
            {
                if (_tbcliente1 == null)
                {
                    var newCollection = new FixupCollection<tbcliente>();
                    newCollection.CollectionChanged += Fixuptbcliente1;
                    _tbcliente1 = newCollection;
                }
                return _tbcliente1;
            }
            set
            {
                if (!ReferenceEquals(_tbcliente1, value))
                {
                    var previousValue = _tbcliente1 as FixupCollection<tbcliente>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptbcliente1;
                    }
                    _tbcliente1 = value;
                    var newValue = value as FixupCollection<tbcliente>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptbcliente1;
                    }
                }
            }
        }
        private ICollection<tbcliente> _tbcliente1;
    
        public virtual tbcliente tbcliente2
        {
            get { return _tbcliente2; }
            set
            {
                if (!ReferenceEquals(_tbcliente2, value))
                {
                    var previousValue = _tbcliente2;
                    _tbcliente2 = value;
                    Fixuptbcliente2(previousValue);
                }
            }
        }
        private tbcliente _tbcliente2;
    
        public virtual tbtipofamiliar tbtipofamiliar
        {
            get { return _tbtipofamiliar; }
            set
            {
                if (!ReferenceEquals(_tbtipofamiliar, value))
                {
                    var previousValue = _tbtipofamiliar;
                    _tbtipofamiliar = value;
                    Fixuptbtipofamiliar(previousValue);
                }
            }
        }
        private tbtipofamiliar _tbtipofamiliar;
    
        public virtual ICollection<tbclienteoperacion> tbclienteoperacion
        {
            get
            {
                if (_tbclienteoperacion == null)
                {
                    var newCollection = new FixupCollection<tbclienteoperacion>();
                    newCollection.CollectionChanged += Fixuptbclienteoperacion;
                    _tbclienteoperacion = newCollection;
                }
                return _tbclienteoperacion;
            }
            set
            {
                if (!ReferenceEquals(_tbclienteoperacion, value))
                {
                    var previousValue = _tbclienteoperacion as FixupCollection<tbclienteoperacion>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptbclienteoperacion;
                    }
                    _tbclienteoperacion = value;
                    var newValue = value as FixupCollection<tbclienteoperacion>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptbclienteoperacion;
                    }
                }
            }
        }
        private ICollection<tbclienteoperacion> _tbclienteoperacion;
    
        public virtual ICollection<tbdomicilio> tbdomicilio
        {
            get
            {
                if (_tbdomicilio == null)
                {
                    var newCollection = new FixupCollection<tbdomicilio>();
                    newCollection.CollectionChanged += Fixuptbdomicilio;
                    _tbdomicilio = newCollection;
                }
                return _tbdomicilio;
            }
            set
            {
                if (!ReferenceEquals(_tbdomicilio, value))
                {
                    var previousValue = _tbdomicilio as FixupCollection<tbdomicilio>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptbdomicilio;
                    }
                    _tbdomicilio = value;
                    var newValue = value as FixupCollection<tbdomicilio>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptbdomicilio;
                    }
                }
            }
        }
        private ICollection<tbdomicilio> _tbdomicilio;
    
        public virtual ICollection<tbpropiedad> tbpropiedad
        {
            get
            {
                if (_tbpropiedad == null)
                {
                    var newCollection = new FixupCollection<tbpropiedad>();
                    newCollection.CollectionChanged += Fixuptbpropiedad;
                    _tbpropiedad = newCollection;
                }
                return _tbpropiedad;
            }
            set
            {
                if (!ReferenceEquals(_tbpropiedad, value))
                {
                    var previousValue = _tbpropiedad as FixupCollection<tbpropiedad>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptbpropiedad;
                    }
                    _tbpropiedad = value;
                    var newValue = value as FixupCollection<tbpropiedad>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptbpropiedad;
                    }
                }
            }
        }
        private ICollection<tbpropiedad> _tbpropiedad;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void Fixuptbcliente2(tbcliente previousValue)
        {
            if (previousValue != null && previousValue.tbcliente1.Contains(this))
            {
                previousValue.tbcliente1.Remove(this);
            }
    
            if (tbcliente2 != null)
            {
                if (!tbcliente2.tbcliente1.Contains(this))
                {
                    tbcliente2.tbcliente1.Add(this);
                }
                if (cli_id_padre != tbcliente2.cli_id)
                {
                    cli_id_padre = tbcliente2.cli_id;
                }
            }
            else if (!_settingFK)
            {
                cli_id_padre = null;
            }
        }
    
        private void Fixuptbtipofamiliar(tbtipofamiliar previousValue)
        {
            if (previousValue != null && previousValue.tbcliente.Contains(this))
            {
                previousValue.tbcliente.Remove(this);
            }
    
            if (tbtipofamiliar != null)
            {
                if (!tbtipofamiliar.tbcliente.Contains(this))
                {
                    tbtipofamiliar.tbcliente.Add(this);
                }
                if (tif_id != tbtipofamiliar.tif_id)
                {
                    tif_id = tbtipofamiliar.tif_id;
                }
            }
        }
    
        private void Fixuptbcliente1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tbcliente item in e.NewItems)
                {
                    item.tbcliente2 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tbcliente item in e.OldItems)
                {
                    if (ReferenceEquals(item.tbcliente2, this))
                    {
                        item.tbcliente2 = null;
                    }
                }
            }
        }
    
        private void Fixuptbclienteoperacion(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tbclienteoperacion item in e.NewItems)
                {
                    item.tbcliente = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tbclienteoperacion item in e.OldItems)
                {
                    if (ReferenceEquals(item.tbcliente, this))
                    {
                        item.tbcliente = null;
                    }
                }
            }
        }
    
        private void Fixuptbdomicilio(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tbdomicilio item in e.NewItems)
                {
                    item.tbcliente = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tbdomicilio item in e.OldItems)
                {
                    if (ReferenceEquals(item.tbcliente, this))
                    {
                        item.tbcliente = null;
                    }
                }
            }
        }
    
        private void Fixuptbpropiedad(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tbpropiedad item in e.NewItems)
                {
                    if (!item.tbcliente.Contains(this))
                    {
                        item.tbcliente.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tbpropiedad item in e.OldItems)
                {
                    if (item.tbcliente.Contains(this))
                    {
                        item.tbcliente.Remove(this);
                    }
                }
            }
        }

        #endregion

    }
}
