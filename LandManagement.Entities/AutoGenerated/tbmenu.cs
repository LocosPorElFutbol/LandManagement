//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace LandManagement.Entities
{
    public partial class tbmenu
    {
        #region Primitive Properties
    
        public virtual int men_id
        {
            get;
            set;
        }
    
        public virtual Nullable<int> men_id_padre
        {
            get { return _men_id_padre; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_men_id_padre != value)
                    {
                        if (tbmenu2 != null && tbmenu2.men_id != value)
                        {
                            tbmenu2 = null;
                        }
                        _men_id_padre = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _men_id_padre;
    
        public virtual string men_nombre
        {
            get;
            set;
        }
    
        public virtual string men_nombre_formulario
        {
            get;
            set;
        }
    
        public virtual bool men_estado
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<tbmenu> tbmenu1
        {
            get
            {
                if (_tbmenu1 == null)
                {
                    var newCollection = new FixupCollection<tbmenu>();
                    newCollection.CollectionChanged += Fixuptbmenu1;
                    _tbmenu1 = newCollection;
                }
                return _tbmenu1;
            }
            set
            {
                if (!ReferenceEquals(_tbmenu1, value))
                {
                    var previousValue = _tbmenu1 as FixupCollection<tbmenu>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptbmenu1;
                    }
                    _tbmenu1 = value;
                    var newValue = value as FixupCollection<tbmenu>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptbmenu1;
                    }
                }
            }
        }
        private ICollection<tbmenu> _tbmenu1;
    
        public virtual tbmenu tbmenu2
        {
            get { return _tbmenu2; }
            set
            {
                if (!ReferenceEquals(_tbmenu2, value))
                {
                    var previousValue = _tbmenu2;
                    _tbmenu2 = value;
                    Fixuptbmenu2(previousValue);
                }
            }
        }
        private tbmenu _tbmenu2;
    
        public virtual ICollection<tbusuario> tbusuario
        {
            get
            {
                if (_tbusuario == null)
                {
                    var newCollection = new FixupCollection<tbusuario>();
                    newCollection.CollectionChanged += Fixuptbusuario;
                    _tbusuario = newCollection;
                }
                return _tbusuario;
            }
            set
            {
                if (!ReferenceEquals(_tbusuario, value))
                {
                    var previousValue = _tbusuario as FixupCollection<tbusuario>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptbusuario;
                    }
                    _tbusuario = value;
                    var newValue = value as FixupCollection<tbusuario>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptbusuario;
                    }
                }
            }
        }
        private ICollection<tbusuario> _tbusuario;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void Fixuptbmenu2(tbmenu previousValue)
        {
            if (previousValue != null && previousValue.tbmenu1.Contains(this))
            {
                previousValue.tbmenu1.Remove(this);
            }
    
            if (tbmenu2 != null)
            {
                if (!tbmenu2.tbmenu1.Contains(this))
                {
                    tbmenu2.tbmenu1.Add(this);
                }
                if (men_id_padre != tbmenu2.men_id)
                {
                    men_id_padre = tbmenu2.men_id;
                }
            }
            else if (!_settingFK)
            {
                men_id_padre = null;
            }
        }
    
        private void Fixuptbmenu1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tbmenu item in e.NewItems)
                {
                    item.tbmenu2 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tbmenu item in e.OldItems)
                {
                    if (ReferenceEquals(item.tbmenu2, this))
                    {
                        item.tbmenu2 = null;
                    }
                }
            }
        }
    
        private void Fixuptbusuario(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tbusuario item in e.NewItems)
                {
                    if (!item.tbmenu.Contains(this))
                    {
                        item.tbmenu.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tbusuario item in e.OldItems)
                {
                    if (item.tbmenu.Contains(this))
                    {
                        item.tbmenu.Remove(this);
                    }
                }
            }
        }

        #endregion

    }
}
