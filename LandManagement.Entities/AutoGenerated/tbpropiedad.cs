//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace LandManagement.Entities
{
    public partial class tbpropiedad
    {
        #region Primitive Properties
    
        public virtual int pro_id
        {
            get;
            set;
        }
    
        public virtual int tip_id
        {
            get { return _tip_id; }
            set
            {
                if (_tip_id != value)
                {
                    if (tbtipopropiedad != null && tbtipopropiedad.tip_id != value)
                    {
                        tbtipopropiedad = null;
                    }
                    _tip_id = value;
                }
            }
        }
        private int _tip_id;
    
        public virtual string pro_calle
        {
            get;
            set;
        }
    
        public virtual int pro_numero
        {
            get;
            set;
        }
    
        public virtual Nullable<int> pro_piso
        {
            get;
            set;
        }
    
        public virtual string pro_departamento
        {
            get;
            set;
        }
    
        public virtual string pro_codigo_postal
        {
            get;
            set;
        }
    
        public virtual string pro_localidad
        {
            get;
            set;
        }
    
        public virtual string pro_caracteristica
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<tboperaciones> tboperaciones
        {
            get
            {
                if (_tboperaciones == null)
                {
                    var newCollection = new FixupCollection<tboperaciones>();
                    newCollection.CollectionChanged += Fixuptboperaciones;
                    _tboperaciones = newCollection;
                }
                return _tboperaciones;
            }
            set
            {
                if (!ReferenceEquals(_tboperaciones, value))
                {
                    var previousValue = _tboperaciones as FixupCollection<tboperaciones>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptboperaciones;
                    }
                    _tboperaciones = value;
                    var newValue = value as FixupCollection<tboperaciones>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptboperaciones;
                    }
                }
            }
        }
        private ICollection<tboperaciones> _tboperaciones;
    
        public virtual tbtipopropiedad tbtipopropiedad
        {
            get { return _tbtipopropiedad; }
            set
            {
                if (!ReferenceEquals(_tbtipopropiedad, value))
                {
                    var previousValue = _tbtipopropiedad;
                    _tbtipopropiedad = value;
                    Fixuptbtipopropiedad(previousValue);
                }
            }
        }
        private tbtipopropiedad _tbtipopropiedad;
    
        public virtual ICollection<tbcliente> tbcliente
        {
            get
            {
                if (_tbcliente == null)
                {
                    var newCollection = new FixupCollection<tbcliente>();
                    newCollection.CollectionChanged += Fixuptbcliente;
                    _tbcliente = newCollection;
                }
                return _tbcliente;
            }
            set
            {
                if (!ReferenceEquals(_tbcliente, value))
                {
                    var previousValue = _tbcliente as FixupCollection<tbcliente>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptbcliente;
                    }
                    _tbcliente = value;
                    var newValue = value as FixupCollection<tbcliente>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptbcliente;
                    }
                }
            }
        }
        private ICollection<tbcliente> _tbcliente;
    
        public virtual ICollection<tbservicios> tbservicios
        {
            get
            {
                if (_tbservicios == null)
                {
                    var newCollection = new FixupCollection<tbservicios>();
                    newCollection.CollectionChanged += Fixuptbservicios;
                    _tbservicios = newCollection;
                }
                return _tbservicios;
            }
            set
            {
                if (!ReferenceEquals(_tbservicios, value))
                {
                    var previousValue = _tbservicios as FixupCollection<tbservicios>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptbservicios;
                    }
                    _tbservicios = value;
                    var newValue = value as FixupCollection<tbservicios>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptbservicios;
                    }
                }
            }
        }
        private ICollection<tbservicios> _tbservicios;

        #endregion

        #region Association Fixup
    
        private void Fixuptbtipopropiedad(tbtipopropiedad previousValue)
        {
            if (previousValue != null && previousValue.tbpropiedad.Contains(this))
            {
                previousValue.tbpropiedad.Remove(this);
            }
    
            if (tbtipopropiedad != null)
            {
                if (!tbtipopropiedad.tbpropiedad.Contains(this))
                {
                    tbtipopropiedad.tbpropiedad.Add(this);
                }
                if (tip_id != tbtipopropiedad.tip_id)
                {
                    tip_id = tbtipopropiedad.tip_id;
                }
            }
        }
    
        private void Fixuptboperaciones(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tboperaciones item in e.NewItems)
                {
                    item.tbpropiedad = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tboperaciones item in e.OldItems)
                {
                    if (ReferenceEquals(item.tbpropiedad, this))
                    {
                        item.tbpropiedad = null;
                    }
                }
            }
        }
    
        private void Fixuptbcliente(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tbcliente item in e.NewItems)
                {
                    if (!item.tbpropiedad.Contains(this))
                    {
                        item.tbpropiedad.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tbcliente item in e.OldItems)
                {
                    if (item.tbpropiedad.Contains(this))
                    {
                        item.tbpropiedad.Remove(this);
                    }
                }
            }
        }
    
        private void Fixuptbservicios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tbservicios item in e.NewItems)
                {
                    if (!item.tbpropiedad.Contains(this))
                    {
                        item.tbpropiedad.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tbservicios item in e.OldItems)
                {
                    if (item.tbpropiedad.Contains(this))
                    {
                        item.tbpropiedad.Remove(this);
                    }
                }
            }
        }

        #endregion

    }
}
